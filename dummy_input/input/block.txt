netcdf block {
dimensions:
	len_name = 256 ;
	time_step = UNLIMITED ; // (0 currently)
	num_dim = 3 ;
	num_nodes = 24 ;
	num_elem = 6 ;
	num_el_blk = 1 ;
	num_side_sets = 7 ;
	num_el_in_blk1 = 6 ;
	num_nod_per_el1 = 8 ;
	num_side_ss1 = 6 ;
	num_df_ss1 = 24 ;
	num_side_ss2 = 3 ;
	num_df_ss2 = 12 ;
	num_side_ss3 = 3 ;
	num_df_ss3 = 12 ;
	num_side_ss4 = 2 ;
	num_df_ss4 = 8 ;
	num_side_ss5 = 2 ;
	num_df_ss5 = 8 ;
	num_side_ss6 = 6 ;
	num_df_ss6 = 24 ;
	num_side_ss7 = 6 ;
	num_df_ss7 = 24 ;
	num_qa_rec = 1 ;
	four = 4 ;
	len_string = 33 ;
variables:
	double time_whole(time_step) ;
	int eb_status(num_el_blk) ;
	int eb_prop1(num_el_blk) ;
		eb_prop1:name = "ID" ;
	int ss_status(num_side_sets) ;
	int ss_prop1(num_side_sets) ;
		ss_prop1:name = "ID" ;
	double coordx(num_nodes) ;
	double coordy(num_nodes) ;
	double coordz(num_nodes) ;
	char eb_names(num_el_blk, len_name) ;
		eb_names:_FillValue = "" ;
	char ss_names(num_side_sets, len_name) ;
		ss_names:_FillValue = "" ;
	char coor_names(num_dim, len_name) ;
		coor_names:_FillValue = "" ;
	int connect1(num_el_in_blk1, num_nod_per_el1) ;
		connect1:elem_type = "HEX8" ;
	int elem_ss1(num_side_ss1) ;
	int side_ss1(num_side_ss1) ;
	double dist_fact_ss1(num_df_ss1) ;
	int elem_ss2(num_side_ss2) ;
	int side_ss2(num_side_ss2) ;
	double dist_fact_ss2(num_df_ss2) ;
	int elem_ss3(num_side_ss3) ;
	int side_ss3(num_side_ss3) ;
	double dist_fact_ss3(num_df_ss3) ;
	int elem_ss4(num_side_ss4) ;
	int side_ss4(num_side_ss4) ;
	double dist_fact_ss4(num_df_ss4) ;
	int elem_ss5(num_side_ss5) ;
	int side_ss5(num_side_ss5) ;
	double dist_fact_ss5(num_df_ss5) ;
	int elem_ss6(num_side_ss6) ;
	int side_ss6(num_side_ss6) ;
	double dist_fact_ss6(num_df_ss6) ;
	int elem_ss7(num_side_ss7) ;
	int side_ss7(num_side_ss7) ;
	double dist_fact_ss7(num_df_ss7) ;
	char qa_records(num_qa_rec, four, len_string) ;
	int elem_map(num_elem) ;
	int elem_num_map(num_elem) ;
	int node_num_map(num_nodes) ;

// global attributes:
		:api_version = 8.03f ;
		:version = 8.03f ;
		:floating_point_word_size = 8 ;
		:file_size = 1 ;
		:maximum_name_length = 32 ;
		:int64_status = 0 ;
		:title = "cubit(Documents/Software/specfemx_static/simplest_block/block.e): 06/05/2022: 15" ;
data:

 eb_status = 1 ;

 eb_prop1 = 1 ;

 ss_status = 1, 1, 1, 1, 1, 1, 1 ;

 ss_prop1 = 1, 2, 3, 4, 5, 6, 7 ;

 coordx = -10, -10, -10, -10, 0, 0, 0, 0, -10, -10, 0, 0, -10, -10, 0, 0, 10, 
    10, 10, 10, 10, 10, 10, 10 ;

 coordy = -15, -15, -5, -5, -15, -15, -5, -5, 5, 5, 5, 5, 15, 15, 15, 15, 
    -15, -15, -5, -5, 5, 5, 15, 15 ;

 coordz = 5, -5, -5, 5, 5, -5, -5, 5, -5, 5, -5, 5, -5, 5, -5, 5, 5, -5, -5, 
    5, -5, 5, -5, 5 ;

 eb_names =
  "" ;

 ss_names =
  "free_surface",
  "ssbcux_right",
  "ssbcux_left",
  "ssbcuy_left",
  "ssbcuy_right",
  "ssbcux_ssbcuy_ssbcuz_bottom",
  "traction" ;

 coor_names =
  "x",
  "y",
  "z" ;

 connect1 =
  1, 2, 3, 4, 5, 6, 7, 8,
  4, 3, 9, 10, 8, 7, 11, 12,
  10, 9, 13, 14, 12, 11, 15, 16,
  5, 6, 7, 8, 17, 18, 19, 20,
  8, 7, 11, 12, 20, 19, 21, 22,
  12, 11, 15, 16, 22, 21, 23, 24 ;

 elem_ss1 = 4, 5, 6, 1, 2, 3 ;

 side_ss1 = 4, 4, 4, 4, 4, 4 ;

 dist_fact_ss1 = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1 ;

 elem_ss2 = 4, 5, 6 ;

 side_ss2 = 6, 6, 6 ;

 dist_fact_ss2 = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ;

 elem_ss3 = 3, 2, 1 ;

 side_ss3 = 5, 5, 5 ;

 dist_fact_ss3 = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1 ;

 elem_ss4 = 1, 4 ;

 side_ss4 = 1, 1 ;

 dist_fact_ss4 = 1, 1, 1, 1, 1, 1, 1, 1 ;

 elem_ss5 = 6, 3 ;

 side_ss5 = 3, 3 ;

 dist_fact_ss5 = 1, 1, 1, 1, 1, 1, 1, 1 ;

 elem_ss6 = 6, 5, 4, 3, 2, 1 ;

 side_ss6 = 2, 2, 2, 2, 2, 2 ;

 dist_fact_ss6 = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1 ;

 elem_ss7 = 4, 5, 6, 1, 2, 3 ;

 side_ss7 = 4, 4, 4, 4, 4, 4 ;

 dist_fact_ss7 = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 
    1, 1, 1, 1 ;

 qa_records =
  "CUBIT",
  "2022.4",
  "06/05/2022",
  "15:45:39" ;

 elem_map = 1, 2, 3, 4, 5, 6 ;

 elem_num_map = 1, 2, 3, 4, 5, 6 ;

 node_num_map = 7, 17, 20, 9, 10, 18, 24, 11, 21, 8, 23, 12, 19, 5, 22, 6, 1, 
    14, 16, 3, 15, 4, 13, 2 ;
}
